name: CI

on: [push]

jobs:
  ruby:
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tft
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x' # sync with `package.json` and `nvmrc`
      - name: Get Yarn Cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Node Modules Cache
        id: node-modules-cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn
        run: yarn install
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.3
          bundler-cache: true
      - name: Rubocop
        run: bundle exec rubocop
      - name: Translations Lint
        run: i18n-tasks health
      - name: JS Lint
        run: yarn lint
      - name: Build Assets
        run: yarn build
      - name: Create PG Database
        run: bundle exec rake db:create db:migrate
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/tft
          RAILS_ENV: test
      - name: Build and test with Rake
        run: bundle exec rspec --format documentation
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/tft
          REDIS_URL: redis://127.0.0.1:6379
          RAILS_ENV: test
